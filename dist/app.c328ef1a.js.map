{"version":3,"sources":["app.js"],"names":["main","document","querySelector","template","getElementById","observedElement","getImageUrl","width","height","performance","now","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","clonedTemplate","cloneNode","src","removeAttribute","append","unobserve","observe"],"mappings":"AAAA,IAAMA,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AACA,IAAMC,QAAQ,GAAGF,QAAQ,CAACG,cAAT,CAAwB,UAAxB,CAAjB;AAGA,IAAIC,eAAe,GAAGF,QAAtB;;AAEA,SAASG,WAAT,OAAwC;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACpC,yCAAgCD,KAAhC,cAAyCC,MAAzC,sBAA2DC,WAAW,CAACC,GAAZ,EAA3D;AACH;;AAED,IAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,UAASC,OAAT,EAAkB;AACxDA,EAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACrB,QAAGA,KAAK,CAACC,cAAT,EAAyB;AACrB,UAAMC,cAAc,GAAGd,QAAQ,CAACe,SAAT,CAAmB,IAAnB,CAAvB;AACAD,MAAAA,cAAc,CAACf,aAAf,CAA6B,KAA7B,EAAoCiB,GAApC,GAA0Cb,WAAW,CAAC;AAAEC,QAAAA,KAAK,EAAE,GAAT;AAAcC,QAAAA,MAAM,EAAE;AAAtB,OAAD,CAArD;AACAS,MAAAA,cAAc,CAACG,eAAf,CAA+B,IAA/B;AAEApB,MAAAA,IAAI,CAACqB,MAAL,CAAYJ,cAAZ;AACAN,MAAAA,QAAQ,CAACW,SAAT,CAAmBjB,eAAnB;AACAA,MAAAA,eAAe,GAAGY,cAAlB;AACAN,MAAAA,QAAQ,CAACY,OAAT,CAAiBN,cAAjB;AACH;AACJ,GAXD;AAYH,CAbgB,CAAjB;AAeAN,QAAQ,CAACY,OAAT,CAAiBlB,eAAjB","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["const main = document.querySelector(\"main\")\nconst template = document.getElementById(\"template\")\n\n\nlet observedElement = template;\n\nfunction getImageUrl({ width, height }) {\n    return `https://picsum.photos/${width}/${height}?nocache=${performance.now()}`\n}\n\nconst observer = new IntersectionObserver(function(entries) {\n    entries.forEach(entry => {\n        if(entry.isIntersecting) {\n            const clonedTemplate = template.cloneNode(true)\n            clonedTemplate.querySelector(\"img\").src = getImageUrl({ width: 400, height: 250 })\n            clonedTemplate.removeAttribute(\"id\")\n\n            main.append(clonedTemplate)\n            observer.unobserve(observedElement)\n            observedElement = clonedTemplate\n            observer.observe(clonedTemplate)\n        }\n    })\n})\n\nobserver.observe(observedElement)\n"]}